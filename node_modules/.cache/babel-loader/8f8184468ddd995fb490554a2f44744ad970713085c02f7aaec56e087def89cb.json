{"ast":null,"code":"var _jsxFileName = \"E:\\\\selftodoapp\\\\src\\\\components\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./Main.css\";\nimport List from '../List/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const getLocalItem = () => {\n    let listData = localStorage.getItem(\"items\");\n    if (listData) {\n      return JSON.parse(localStorage.getItem(\"items\"));\n    } else {\n      return [];\n    }\n  };\n  const [inputValue, setInputValue] = useState(\"\");\n  const [allData, setAllData] = useState(getLocalItem());\n  const [toggleEdit, setToggleEdit] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(allData));\n  }, [allData]);\n  const handleAddItem = () => {\n    if (inputValue === \"\") {\n      alert(\"Write Something To Add\");\n    } else if (inputValue && toggleEdit) {\n      setAllData(allData.map(elem => {\n        if (condition) {}\n      }));\n    } else {\n      setAllData([...allData, inputValue]);\n      const dataWithId = {\n        id: new Date().getTime().toString(),\n        item: inputValue\n      };\n      setAllData([...allData, dataWithId]);\n      setInputValue('');\n      console.log(allData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: inputValue,\n        placeholder: \"Write Your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), toggleEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        className: \"add\",\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddItem,\n        className: \"add\",\n        children: \"\\uD83D\\uDD0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      allData: allData,\n      setAllData: setAllData,\n      setInputValue: setInputValue,\n      setToggleEdit: setToggleEdit,\n      setIsEditItem: setIsEditItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"BjyOVbcZtkc23Vvgj3A1OUthQjc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","List","jsxDEV","_jsxDEV","Main","_s","getLocalItem","listData","localStorage","getItem","JSON","parse","inputValue","setInputValue","allData","setAllData","toggleEdit","setToggleEdit","isEditItem","setIsEditItem","handleChange","e","target","value","setItem","stringify","handleAddItem","alert","map","elem","condition","dataWithId","id","Date","getTime","toString","item","console","log","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/selftodoapp/src/components/Main/Main.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"./Main.css\"\r\nimport List from '../List/List'\r\n\r\nconst Main = () => {\r\n    const getLocalItem = ()=>{\r\n        let listData = localStorage.getItem(\"items\")\r\n        if (listData) {\r\n           return JSON.parse(localStorage.getItem(\"items\"))\r\n        }\r\n        else{\r\n          return  []\r\n        }\r\n    }\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [allData, setAllData] = useState(getLocalItem())\r\n    const [toggleEdit, setToggleEdit] = useState(true)\r\n    const [isEditItem, setIsEditItem] = useState(null)\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem(\"items\", JSON.stringify(allData))\r\n    \r\n    }, [allData])\r\n    \r\n    \r\nconst handleAddItem =()=>{\r\n    if (inputValue ===\"\") {\r\n        alert(\"Write Something To Add\")\r\n    }\r\n    else if(inputValue && toggleEdit){\r\n       setAllData(\r\n        allData.map((elem)=>{\r\n            if (condition) {\r\n                \r\n            }\r\n        })\r\n       )\r\n    }\r\n    else{\r\n        setAllData([...allData, inputValue])\r\n        const dataWithId = {\r\n            id: new Date().getTime().toString(), item: inputValue\r\n        } \r\n        setAllData([...allData, dataWithId])\r\n        setInputValue('')\r\n        console.log(allData)\r\n\r\n    }\r\n}\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className=\"input\">\r\n\r\n                <input type=\"text\" onChange={handleChange} value={inputValue} placeholder='Write Your task' />\r\n             {\r\n                 toggleEdit ?  <button onClick={handleAddItem} className='add' >‚ûï</button>\r\n              :   <button onClick={handleAddItem} className='add' >üîè</button>\r\n                 \r\n            } \r\n            </div>\r\n\r\n            <List allData={allData} setAllData={setAllData}  setInputValue={setInputValue}  setToggleEdit={setToggleEdit} setIsEditItem={setIsEditItem}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}